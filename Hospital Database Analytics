--Show first name, last name, and gender of patients whose gender is 'M'
SELECT
  first_name,
  last_name,
  gender
FROM patients
WHERE gender = 'M'; 

--Show first name and last name of patients who does not have allergies 
SELECT 
  first_name,
  last_name
FROM patients
WHERE allergies IS NULL; 

--Show first name of patients that start with the letter 'C'
SELECT 
  first_name
FROM patients
WHERE first_name LIKE('C%'); 

--Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)
SELECT 
  first_name,
  last_name
FROM patients
WHERE weight between 100 AND 120; 

--Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA' 
UPDATE patients
  SET allergies = 'NKA'
WHERE allergies IS NULL; 

--Show first name and last name concatinated into one column to show their full name 
SELECT 
  CONCAT(first_name,' ',last_name) as full_name
from patients;

--Show first name, last name, and the full province name of each patient 
SELECT
  first_name,
  last_name,
  province_name 
FROM patients
JOIN province_names on patients.province_id = province_names.province_id;

--Show how many patients have a birth_date with 2010 as the birth year
SELECT 
  COUNT(patient_id) AS total_patients
FROM patients	
WHERE YEAR(birth_date) = 2010; 

--Show the first_name, last_name, and height of the patient with the greatest height
SELECT
  first_name,
  last_name,
  height
FROM patients
WHERE height = (SELECT max(height)
    		FROM patients
  		); 

--Show all columns for patients who have one of the following patient_ids: 1,45,534,879,1000 
SELECT *
FROM patients
WHERE patient_id IN (1, 45, 534, 879, 1000); 

--Show the total number of admissions
SELECT 
  COUNT(patient_id) AS total_admissions
FROM admissions; 

--Show all the columns from admissions where the patient was admitted and discharged on the same day 
SELECT *
FROM admissions 
WHERE admission_date = discharge_date; 

--Show the patient id and the total number of admissions for patient_id 579 
SELECT 
  patient_id,
  COUNT(patient_id) AS total_admissions
FROM admissions
WHERE patient_id = 579; 

--Based on the cities that our patients live in, show unique cities that are in province_id 'NS'
SELECT 
  DISTINCT(city) AS unique_city
FROM patients
WHERE province_id = 'NS'; 

--Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70 
SELECT 
  first_name,
  last_name,
  birth_date
FROM patients
WHERE height > 160 AND weight > 70; 

--Write a query to find list of patients first_name, last_name, and allergies from Hamilton where allergies are not null
SELECT 
  first_name,
  last_name,
  allergies 
FROM patients 
WHERE city = 'Hamilton' AND allergies IS NOT NULL; 

--Show unique birth years from patients and order them by ascending 
SELECT 
  DISTINCT(YEAR(birth_date)) as birth_year
FROM patients
ORDER BY unique_birth_year; 

--Show unique first names from the patients table which only occurs once in the list
SELECT 
  first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name) = 1; 

--Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long
SELECT 
  patient_id,
  first_name
FROM patients
WHERE LOWER(first_name) LIKE 's%s' AND LEN(first_name) >= 6; 

--Show patient_id, first_name, last_name from patients whose diagnosis is 'Dementia'
SELECT 
    patients.patient_id,
    first_name,
    last_name  
FROM patients 
JOIN admissions ON patients.patient_id = admissions.patient_id 
WHERE diagnosis = 'Dementia'; 

--Display every patient's first_name. Order the list by the length of each name and then by alphbetically
SELECT 
  first_name
FROM patients
ORDER BY LEN(first_name), first_name; 

--Show the total amount of male patients and the total amount of female patients in the patients table. Display the two results in the same row
SELECT 
  (SELECT 
     COUNT(patient_id)
   FROM patients
   WHERE gender = 'M') AS num_male_patients, 
  (SELECT
     COUNT(patient_id)
   FROM patients
   WHERE gender = 'F') AS num_female_patients; 

--Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. 
--Show results ordered ascending by allergies then by first_name then by last_name. 
SELECT 
    first_name,
    last_name,
    allergies
FROM patients 
WHERE allergies in ('Penicillin', 'Morphine')
ORDER BY allergies, first_name, last_name; 

--Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis 
SELECT 
  patient_id, 
  diagnosis
FROM admissions
GROUP BY patient_id, diagnosis 
HAVING COUNT(*) > 1; 

--Show the city and the total number of patients in the city. Order from most to least patients and then by city name ascending
SELECT 
  city, 
  COUNT(patient_id) AS num_patients
FROM patients
GROUP BY city
ORDER BY num_patients DESC, city; 

--Show first name, last name and role of every person that is either patient or doctor. The roles are either "Patient" or "Doctor" 
SELECT 
  first_name,
  last_name,
  'Patient' AS role 
FROM patients
UNION ALL 
SELECT 
  first_name,
  last_name,
  'Doctor' AS role 
FROM doctors;

--Show all allergies ordered by popularity. Remove NULL values from query
SELECT 
	allergies,
  COUNT(*) AS popularity
FROM patients
WHERE allergies IS NOT NULL
GROUP BY allergies
ORDER BY popularity DESC; 

--Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. 
--Sort the list starting from the earliest birth_date 
SELECT 
	first_name,
  last_name,
  birth_date 
FROM patients 
WHERE YEAR(birth_date) BETWEEN 1970 AND 1979 
ORDER BY birth_date; 

--Display each patient's full name in a single column. 
--Their last_name in all upper letters must appear first, then first_name in all lower case letters. 
--Separate the last_name and first_name with a comma. Order the list by the first_name in decending order 
SELECT 
	CONCAT(UPPER(last_name),',' , LOWER(first_name)) 
FROM patients 
ORDER BY first_name DESC; 

--Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000
SELECT 
	province_id, 
  SUM(height) 
FROM patients 
GROUP BY province_id
HAVING SUM(height) >= 7000; 

--Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni' 
SELECT 
	MAX(weight) - MIN(weight) 
FROM patients
WHERE last_name = 'Maroni'; 

--Show all of the days of the month (1-31) and how many admission_dates occurred on that day. 
--Sort by the day with most admissions to least admissions 
SELECT 
	DAY(admission_date) AS day_num,
  COUNT(*) AS num_admissions
FROM admissions
GROUP BY day_num
ORDER BY num_admissions DESC; 

--Show all columns for patient_id 542's most recent admission_date 
SELECT * 
FROM admissions
WHERE patient_id = 542 AND admission_date = (SELECT 
                                             	MAX(admission_date) 
                                             FROM admissions
                                             WHERE patient_id = 542); 

--Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
--1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
--2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters
SELECT
	patient_id,
  attending_doctor_id,
  diagnosis
FROM admissions
WHERE MOD(patient_id, 2) <> 0 AND attending_doctor_id IN (1, 5, 19) 
OR attending_doctor_id LIKE '%2%' AND LEN(patient_id) = 3; 

--Show first_name, last_name, and the total number of admissions attended for each doctor
SELECT
	first_name,
  last_name,
  COUNT(*) total_admissions
FROM doctors
JOIN admissions ON doctors.doctor_id = admissions.attending_doctor_id
GROUP BY attending_doctor_id; 

--For each doctor, display their id, full name, and the first and last admission date they attended 
SELECT
	doctor_id,
  CONCAT(first_name, ' ',last_name) AS full_name,
  MIN(admission_date) AS first_admission,
  MAX(admission_date) AS last_admission
FROM doctors 
JOIN admissions ON doctors.doctor_id = admissions.attending_doctor_id
GROUP BY doctor_id; 

--Display the total amount of patients for each province. Order by descending 
SELECT 
	province_names.province_name, 
  COUNT(*) AS total_patients 
FROM province_names
JOIN patients ON province_names.province_id = patients.province_id
GROUP BY province_name
ORDER BY total_patients DESC; 

--For every admission, display the patient's full name, their admission diagnosis, and their doctor's full name who diagnosed their problem
SELECT 
	CONCAT(patients.first_name, ' ', patients.last_name) AS patient_name,
  diagnosis, 
  CONCAT(doctors.first_name, ' ', doctors.last_name) AS doctor_name 
FROM patients 
JOIN admissions ON patients.patient_id = admissions.patient_id
JOIN doctors ON admissions.attending_doctor_id = doctors.doctor_id; 

--Display the number of duplicate patients based on their first_name and last_name 
SELECT 
	first_name,
  last_name,
  COUNT(*) AS num_duplicates
FROM patients
GROUP BY first_name, last_name
HAVING COUNT(*) > 1; 

--Display patient's full name, height in the units feet rounded to 1 decimal, weight in the unit pounds rounded to 0 decimals, 
--birth_date, gender non abbreviated 
SELECT 
	CONCAT(first_name, ' ',last_name) AS full_name,
  ROUND(height/30.48, 1) AS height_in_ft,
  ROUND(weight*2.205, 0) AS weight_in_lb, 
  birth_date,
  CASE 
    WHEN gender = 'M' THEN 'Male'
    WHEN gender = 'F' THEN 'Female'
  END gender
FROM patients; 

--Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table 
SELECT 
	patients.patient_id, 
  first_name,
  last_name 
FROM patients
WHERE patients.patient_id NOT IN (SELECT 
                                  	admissions.patient_id 
                                  from admissions); 

--Show all of the patients grouped into weight groups. Show the total amount of patients in each weight group. Order the list by the weight group decending
SELECT
  COUNT(*) AS patients_in_group,
  FLOOR(weight / 10) * 10 AS weight_group
FROM patients
GROUP BY weight_group
ORDER BY weight_group DESC; 

--Show patient_id, weight, height, isObese from the patients table. Display isObese as a boolean 0 or 1 
SELECT 
	patient_id, 
  weight, 
  height, 
  CASE 
    WHEN weight/(POWER(height/100.0,2)) >= 30 THEN 1
    ELSE 0
    END AS isObese
FROM patients; 

--Show patient_id, first_name, last_name, and attending doctor's specialty.
--Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa' 
SELECT 
	patients.patient_id, 
  patients.first_name, 
  patients.last_name, 
  specialty 
FROM patients 
JOIN admissions ON patients.patient_id = admissions.patient_id 
JOIN doctors ON admissions.attending_doctor_id = doctors.doctor_id 
WHERE diagnosis = 'Epilepsy' AND doctors.first_name = 'Lisa'; 

--All patients who have gone through admissions, can see their medical documents on our site. 
--Those patients are given a temporary password after their first admission. Show the patient_id and temp_password. 
--The password must be the following, in order:
--1. patient_id
--2. the numerical length of patient's last_name
--3. year of patient's birth_date 
SELECT 
	DISTINCT(admissions.patient_id),
  CONCAT(admissions.patient_id, LEN(last_name), YEAR(birth_date)) as temp_password
FROM admissions
JOIN patients ON admissions.patient_id = patients.patient_id;
